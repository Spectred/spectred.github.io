import{_ as t,r as o,o as c,c as l,a as n,d as e,w as p,b as s,e as i}from"./app.94cd83f3.js";const u={},r=n("h1",{id:"\u590D\u6742\u5EA6\u5206\u6790",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u590D\u6742\u5EA6\u5206\u6790","aria-hidden":"true"},"#"),s(" \u590D\u6742\u5EA6\u5206\u6790")],-1),d=n("p",null,[n("img",{src:"https://s2.loli.net/2023/02/01/5DiFez4OwdsEBuN.png",alt:""})],-1),k=n("hr",null,null,-1),v={class:"table-of-contents"},m=i(`<hr><h2 id="_1-\u5927o\u590D\u6742\u5EA6\u8868\u793A\u6CD5" tabindex="-1"><a class="header-anchor" href="#_1-\u5927o\u590D\u6742\u5EA6\u8868\u793A\u6CD5" aria-hidden="true">#</a> 1. \u5927O\u590D\u6742\u5EA6\u8868\u793A\u6CD5</h2><p><code>T(n) = O(f(n))</code></p><ul><li><p>\u53EA\u5173\u6CE8\u5FAA\u73AF\u6267\u884C\u6B21\u6570\u6700\u591A\u7684\u4E00\u6BB5\u4EE3\u7801</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token comment">// O(n)</span>
 <span class="token keyword">int</span> <span class="token function">cal</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
   <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     sum <span class="token operator">=</span> sum <span class="token operator">+</span> i<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u52A0\u6CD5\u6CD5\u5219: \u603B\u590D\u6742\u5EA6\u7B49\u4E8E\u4E24\u7EA7\u6700\u5927\u7684\u90A3\u6BB5\u4EE3\u7801\u7684\u590D\u6742\u5EA6</p><blockquote><p>\u5982\u679C T1(n)=O(f(n))\uFF0CT2(n)=O(g(n))\uFF1B\u90A3\u4E48 T(n)=T1(n)+T2(n)=max(O(f(n)), O(g(n))) =O(max(f(n), g(n)))</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// O(n\xB2)</span>
<span class="token keyword">int</span> <span class="token function">cal</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">int</span> sum_1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
   <span class="token keyword">int</span> p <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> p <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> <span class="token operator">++</span>p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token comment">// O(1)</span>
     sum_1 <span class="token operator">=</span> sum_1 <span class="token operator">+</span> p<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">int</span> sum_2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
   <span class="token keyword">int</span> q <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> q <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>q<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token comment">// O(n)</span>
     sum_2 <span class="token operator">=</span> sum_2 <span class="token operator">+</span> q<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
 
   <span class="token keyword">int</span> sum_3 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
   <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
   <span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> 
     <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token comment">// O(n\xB2)</span>
       sum_3 <span class="token operator">=</span> sum_3 <span class="token operator">+</span>  i <span class="token operator">*</span> j<span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
 
   <span class="token keyword">return</span> sum_1 <span class="token operator">+</span> sum_2 <span class="token operator">+</span> sum_3<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u4E58\u6CD5\u6CD5\u5219\uFF1A \u5D4C\u5957\u4EE3\u7801\u7684\u590D\u6742\u5EA6\u7B49\u4E8E\u5D4C\u5957\u5185\u5916\u4EE3\u7801\u590D\u6742\u5EA6\u7684\u4E58\u79EF</p><blockquote><p>\u5982\u679C T1(n)=O(f(n))\uFF0CT2(n)=O(g(n))\uFF1B\u90A3\u4E48 T(n)=T1(n)*T2(n)=O(f(n))*O(g(n))=O(f(n)*g(n))</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// T(n) = T1(n) * T2(n) = O(n*n) = O(n2)</span>
<span class="token keyword">int</span> <span class="token function">cal</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">int</span> ret <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> 
   <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     ret <span class="token operator">=</span> ret <span class="token operator">+</span> <span class="token function">f</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span> 
 <span class="token punctuation">}</span> 
 
 <span class="token keyword">int</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sum <span class="token operator">=</span> sum <span class="token operator">+</span> i<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> 
  <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-\u590D\u6742\u5EA6\u91CF\u7EA7" tabindex="-1"><a class="header-anchor" href="#_2-\u590D\u6742\u5EA6\u91CF\u7EA7" aria-hidden="true">#</a> 2. \u590D\u6742\u5EA6\u91CF\u7EA7</h2><ul><li>\u5E38\u91CF\u9636 <code>O(1)</code></li><li>\u5BF9\u6570\u9636 <code>O(\u33D2n)</code></li><li>\u7EBF\u6027\u9636 <code>O(n)</code></li><li>\u7EBF\u6027\u5BF9\u6570\u9636 <code>O(n\u33D2n)</code></li><li>\u5E73\u65B9\u9636 <code>O(n\xB2)</code> \u3001\u7ACB\u65B9\u9636 <code>O(n\xB3)</code> ... K\u6B21\u65B9\u9636 <code>O(n^k)</code></li><li>\u6307\u6570\u9636 <code>O(2^n)</code></li><li>\u9636\u4E58\u9636 <code>O(n!)</code></li></ul></li></ul><blockquote><p>\u53EF\u4EE5\u7C97\u7565\u5730\u5206\u4E3A\u4E24\u7C7B\uFF0C\u591A\u9879\u5F0F\u91CF\u7EA7\u548C\u975E\u591A\u9879\u5F0F\u91CF\u7EA7\u3002\u5176\u4E2D\uFF0C\u975E\u591A\u9879\u5F0F\u91CF\u7EA7\u53EA\u6709\u4E24\u4E2A\uFF1AO(2n) \u548C O(n!) \u628A\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A\u975E\u591A\u9879\u5F0F\u91CF\u7EA7\u7684\u7B97\u6CD5\u95EE\u9898\u53EB\u4F5C NP\uFF08Non-Deterministic Polynomial\uFF0C\u975E\u786E\u5B9A\u591A\u9879\u5F0F\uFF09\u95EE\u9898</p></blockquote><h3 id="_2-1-o-1" tabindex="-1"><a class="header-anchor" href="#_2-1-o-1" aria-hidden="true">#</a> 2.1 <code>O(1)</code></h3><p>\u53EA\u8981\u4EE3\u7801\u7684\u6267\u884C\u65F6\u95F4\u4E0D\u968F n \u7684\u589E\u5927\u800C\u589E\u957F\uFF0C\u8FD9\u6837\u4EE3\u7801\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u6211\u4EEC\u90FD\u8BB0\u4F5C O(1) \u6216\u8005\u8BF4\uFF0C\u4E00\u822C\u60C5\u51B5\u4E0B\uFF0C\u53EA\u8981\u7B97\u6CD5\u4E2D\u4E0D\u5B58\u5728\u5FAA\u73AF\u8BED\u53E5\u3001\u9012\u5F52\u8BED\u53E5\uFF0C\u5373\u4F7F\u6709\u6210\u5343\u4E0A\u4E07\u884C\u7684\u4EE3\u7801\uFF0C\u5176\u65F6\u95F4\u590D\u6742\u5EA6\u4E5F\u662F\u039F(1)</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> // \u662FO(1) \u800C\u4E0D\u662FO(3)
 int i = 8;
 int j = 6;
 int sum = i + j;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-o-logn-\u3001-o-nlogn" tabindex="-1"><a class="header-anchor" href="#_2-2-o-logn-\u3001-o-nlogn" aria-hidden="true">#</a> 2.2 <code>O(\u33D2n)</code> \u3001 <code>O(n\u33D2n)</code></h3><blockquote><p>O(nlogn) \u662F\u4E00\u79CD\u975E\u5E38\u5E38\u89C1\u7684\u7B97\u6CD5\u65F6\u95F4\u590D\u6742\u5EA6\u3002\u6BD4\u5982\uFF0C\u5F52\u5E76\u6392\u5E8F\u3001\u5FEB\u901F\u6392\u5E8F\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u90FD\u662F O(nlogn)\u3002</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token comment">// O(\u33D2n) </span>
 i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
 <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> n<span class="token punctuation">)</span>  <span class="token punctuation">{</span>
   i <span class="token operator">=</span> i <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// 2^0 2^1 2^2 ... 2^x = n \u5219O(\u33D22n)</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-o-m-n-\u3001o-m-n" tabindex="-1"><a class="header-anchor" href="#_2-3-o-m-n-\u3001o-m-n" aria-hidden="true">#</a> 2.3 O(m+n)\u3001O(m*n)</h3><blockquote><p>\u4EE3\u7801\u7684\u590D\u6742\u5EA6\u7531\u4E24\u4E2A\u6570\u636E\u7684\u89C4\u6A21\u6765\u51B3\u5B9A</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u6211\u4EEC\u65E0\u6CD5\u4E8B\u5148\u8BC4\u4F30 m \u548C n \u8C01\u7684\u91CF\u7EA7\u5927\uFF0C\u6240\u4EE5\u6211\u4EEC\u5728\u8868\u793A\u590D\u6742\u5EA6\u7684\u65F6\u5019\uFF0C\u5C31\u4E0D\u80FD\u7B80\u5355\u5730\u5229\u7528\u52A0\u6CD5\u6CD5\u5219\uFF0C\u7701\u7565\u6389\u5176\u4E2D\u4E00\u4E2A\u3002\u6240\u4EE5\uFF0C\u4E0A\u9762\u4EE3\u7801\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u5C31\u662F O(m+n)</span>
<span class="token keyword">int</span> <span class="token function">cal</span><span class="token punctuation">(</span><span class="token keyword">int</span> m<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> sum_1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sum_1 <span class="token operator">=</span> sum_1 <span class="token operator">+</span> i<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">int</span> sum_2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sum_2 <span class="token operator">=</span> sum_2 <span class="token operator">+</span> j<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> sum_1 <span class="token operator">+</span> sum_2<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u7A7A\u95F4\u590D\u6742\u5EA6 \u7A7A\u95F4\u590D\u6742\u5EA6\u5168\u79F0\u6E10\u8FDB\u7A7A\u95F4\u590D\u6742\u5EA6\uFF08asymptotic space complexity\uFF09\uFF0C\u8868\u793A\u7B97\u6CD5\u7684\u5B58\u50A8\u7A7A\u95F4\u4E0E\u6570\u636E\u89C4\u6A21\u4E4B\u95F4\u7684\u589E\u957F\u5173\u7CFB</p></blockquote><p><img src="https://s2.loli.net/2023/02/01/HDa489XbTvGgox2.png" alt=""></p><blockquote><p>\u6700\u597D\u60C5\u51B5\u65F6\u95F4\u590D\u6742\u5EA6: \u5728\u6700\u7406\u60F3\u7684\u60C5\u51B5\u4E0B\uFF0C\u6267\u884C\u8FD9\u6BB5\u4EE3\u7801\u7684\u65F6\u95F4\u590D\u6742\u5EA6(\u7EBF\u6027\u8868\u4E2D\u7B2C\u4E00\u4E2A\u5143\u7D20\u5373\u6240\u6C42)</p><p>\u6700\u574F\u60C5\u51B5\u65F6\u95F4\u590D\u6742\u5EA6: \u6700\u7CDF\u7CD5\u7684\u60C5\u51B5\u4E0B\uFF0C\u6267\u884C\u8FD9\u6BB5\u4EE3\u7801\u7684\u65F6\u95F4\u590D\u6742\u5EA6(\u7EBF\u6027\u8868\u4E2D\u6CA1\u6709\u6240\u6C42\u5143\u7D20)</p><p>\u5E73\u5747\u60C5\u51B5\u65F6\u95F4\u590D\u6742\u5EA6</p><p>\u5747\u644A\u65F6\u95F4\u590D\u6742\u5EA6</p></blockquote>`,17);function b(_,h){const a=o("router-link");return c(),l("div",null,[r,d,k,n("nav",v,[n("ul",null,[n("li",null,[e(a,{to:"#_1-\u5927o\u590D\u6742\u5EA6\u8868\u793A\u6CD5"},{default:p(()=>[s("1. \u5927O\u590D\u6742\u5EA6\u8868\u793A\u6CD5")]),_:1})]),n("li",null,[e(a,{to:"#_2-\u590D\u6742\u5EA6\u91CF\u7EA7"},{default:p(()=>[s("2. \u590D\u6742\u5EA6\u91CF\u7EA7")]),_:1}),n("ul",null,[n("li",null,[e(a,{to:"#_2-1-o-1"},{default:p(()=>[s("2.1 O(1)")]),_:1})]),n("li",null,[e(a,{to:"#_2-2-o-logn-\u3001-o-nlogn"},{default:p(()=>[s("2.2 O(\u33D2n) \u3001 O(n\u33D2n)")]),_:1})]),n("li",null,[e(a,{to:"#_2-3-o-m-n-\u3001o-m-n"},{default:p(()=>[s("2.3 O(m+n)\u3001O(m*n)")]),_:1})])])])])]),m])}const y=t(u,[["render",b],["__file","complexity.html.vue"]]);export{y as default};
