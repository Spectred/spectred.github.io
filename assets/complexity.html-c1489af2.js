const e=JSON.parse('{"key":"v-f8bc823a","path":"/base/alg/complexity.html","title":"复杂度分析","lang":"en-US","frontmatter":{"description":"[[toc]] 1. 大O复杂度表示法 T(n) = O(f(n)) 只关注循环执行次数最多的一段代码; 空间复杂度 空间复杂度全称渐进空间复杂度（asymptotic space complexity），表示算法的存储空间与数据规模之间的增长关系 最好情况时间复杂度: 在最理想的情况下，执行这段代码的时间复杂度(线性表中第一个元素即所求) 最坏情况时...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/base/alg/complexity.html"}],["meta",{"property":"og:title","content":"复杂度分析"}],["meta",{"property":"og:description","content":"[[toc]] 1. 大O复杂度表示法 T(n) = O(f(n)) 只关注循环执行次数最多的一段代码; 空间复杂度 空间复杂度全称渐进空间复杂度（asymptotic space complexity），表示算法的存储空间与数据规模之间的增长关系 最好情况时间复杂度: 在最理想的情况下，执行这段代码的时间复杂度(线性表中第一个元素即所求) 最坏情况时..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-02-05T15:52:06.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-05T15:52:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"复杂度分析\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-05T15:52:06.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1. 大O复杂度表示法","slug":"_1-大o复杂度表示法","link":"#_1-大o复杂度表示法","children":[{"level":3,"title":"2.1  O(1)","slug":"_2-1-o-1","link":"#_2-1-o-1","children":[]},{"level":3,"title":"2.2  O(㏒n) 、 O(n㏒n)","slug":"_2-2-o-logn-、-o-nlogn","link":"#_2-2-o-logn-、-o-nlogn","children":[]},{"level":3,"title":"2.3 O(m+n)、O(m*n)","slug":"_2-3-o-m-n-、o-m-n","link":"#_2-3-o-m-n-、o-m-n","children":[]}]}],"git":{"createdTime":1675612326000,"updatedTime":1675612326000,"contributors":[{"name":"spectred","email":"1505073336@qq.com","commits":1}]},"readingTime":{"minutes":2.86,"words":858},"filePathRelative":"base/alg/complexity.md","localizedDate":"February 5, 2023","autoDesc":true}');export{e as data};
