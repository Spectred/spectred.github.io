const e=JSON.parse('{"key":"v-d642798c","path":"/interview/kafka.html","title":"Kafka","lang":"en-US","frontmatter":{"sidebar":"auto","headerDepth":1,"description":"1. 什么是消息队列，有哪些使用场景 一发一存一消费 1.1 应用解耦 例如A系统将消息写入到队列，B系统订阅消息 1.2 流量削峰 例如5k个请求发送到MQ,MQ只保证向后端发送2k个请求 1.3 异步处理 例如将用户注册成功的消息发送到MQ,其他系统(发送邮件，发送短信)等订阅MQ消息，并行操作 1.4 RPC 2. 如何保证消息不丢失 2.1 生...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/interview/kafka.html"}],["meta",{"property":"og:title","content":"Kafka"}],["meta",{"property":"og:description","content":"1. 什么是消息队列，有哪些使用场景 一发一存一消费 1.1 应用解耦 例如A系统将消息写入到队列，B系统订阅消息 1.2 流量削峰 例如5k个请求发送到MQ,MQ只保证向后端发送2k个请求 1.3 异步处理 例如将用户注册成功的消息发送到MQ,其他系统(发送邮件，发送短信)等订阅MQ消息，并行操作 1.4 RPC 2. 如何保证消息不丢失 2.1 生..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-02-05T15:52:06.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-05T15:52:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Kafka\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-05T15:52:06.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1. 什么是消息队列，有哪些使用场景","slug":"_1-什么是消息队列-有哪些使用场景","link":"#_1-什么是消息队列-有哪些使用场景","children":[{"level":3,"title":"1.1 应用解耦","slug":"_1-1-应用解耦","link":"#_1-1-应用解耦","children":[]},{"level":3,"title":"1.2 流量削峰","slug":"_1-2-流量削峰","link":"#_1-2-流量削峰","children":[]},{"level":3,"title":"1.3 异步处理","slug":"_1-3-异步处理","link":"#_1-3-异步处理","children":[]},{"level":3,"title":"1.4 RPC","slug":"_1-4-rpc","link":"#_1-4-rpc","children":[]}]},{"level":2,"title":"2. 如何保证消息不丢失","slug":"_2-如何保证消息不丢失","link":"#_2-如何保证消息不丢失","children":[{"level":3,"title":"2.1 生产者(发不丢)","slug":"_2-1-生产者-发不丢","link":"#_2-1-生产者-发不丢","children":[]},{"level":3,"title":"2.2 broker(存不丢)","slug":"_2-2-broker-存不丢","link":"#_2-2-broker-存不丢","children":[]},{"level":3,"title":"2.3 消费者(消费不丢)","slug":"_2-3-消费者-消费不丢","link":"#_2-3-消费者-消费不丢","children":[]}]},{"level":2,"title":"3. 如何保证顺序性","slug":"_3-如何保证顺序性","link":"#_3-如何保证顺序性","children":[{"level":3,"title":"3.1 单分区","slug":"_3-1-单分区","link":"#_3-1-单分区","children":[]},{"level":3,"title":"3.2 通过分区器","slug":"_3-2-通过分区器","link":"#_3-2-通过分区器","children":[]}]},{"level":2,"title":"4. 如何避免重复消费，或者说如何保证幂等性","slug":"_4-如何避免重复消费-或者说如何保证幂等性","link":"#_4-如何避免重复消费-或者说如何保证幂等性","children":[{"level":3,"title":"4.1 哪些场景可能产生重复的消息","slug":"_4-1-哪些场景可能产生重复的消息","link":"#_4-1-哪些场景可能产生重复的消息","children":[]},{"level":3,"title":"4.2 有哪些手段保证不重复","slug":"_4-2-有哪些手段保证不重复","link":"#_4-2-有哪些手段保证不重复","children":[]}]},{"level":2,"title":"5. 如何处理消息积压","slug":"_5-如何处理消息积压","link":"#_5-如何处理消息积压","children":[]},{"level":2,"title":"6. 消息集群高可用","slug":"_6-消息集群高可用","link":"#_6-消息集群高可用","children":[]},{"level":2,"title":"7. 如何设计一个消息队列","slug":"_7-如何设计一个消息队列","link":"#_7-如何设计一个消息队列","children":[{"level":3,"title":"7.1 生产者","slug":"_7-1-生产者","link":"#_7-1-生产者","children":[]},{"level":3,"title":"7.2 传输","slug":"_7-2-传输","link":"#_7-2-传输","children":[]},{"level":3,"title":"7.3 消息队列的持久化、广播方式(推/拉)、集群","slug":"_7-3-消息队列的持久化、广播方式-推-拉-、集群","link":"#_7-3-消息队列的持久化、广播方式-推-拉-、集群","children":[]},{"level":3,"title":"7.4 如何消费","slug":"_7-4-如何消费","link":"#_7-4-如何消费","children":[]}]},{"level":2,"title":"8. Kafka的基础概念","slug":"_8-kafka的基础概念","link":"#_8-kafka的基础概念","children":[]},{"level":2,"title":"9. Kafka为什么快","slug":"_9-kafka为什么快","link":"#_9-kafka为什么快","children":[]},{"level":2,"title":"#. Kafka的再均衡","slug":"kafka的再均衡","link":"#kafka的再均衡","children":[]}],"git":{"createdTime":1675612326000,"updatedTime":1675612326000,"contributors":[{"name":"spectred","email":"1505073336@qq.com","commits":1}]},"readingTime":{"minutes":4.26,"words":1278},"filePathRelative":"interview/kafka.md","localizedDate":"February 5, 2023","autoDesc":true}');export{e as data};
