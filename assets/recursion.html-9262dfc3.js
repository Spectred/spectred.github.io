import{_ as t,V as e,W as r,a1 as o}from"./framework-36369a6e.js";const n={},s=o('<h1 id="递归" tabindex="-1"><a class="header-anchor" href="#递归" aria-hidden="true">#</a> 递归</h1><p><strong>递归需要满足的三个条件</strong></p><ol><li>一个问题的解可以分解为几个子问题的解</li><li>问题与分解之后的问题，处理数据规模不同，求解思路完全一样</li><li>存在递归终止条件</li></ol><p><strong>如果编写递归代码</strong></p><p>写出递推公式，找到终止条件</p><p><strong>避免栈溢出</strong></p><p><strong>警惕重复计算</strong></p><p>通过一个数据结构（例如散列表）来保存已经求解过得k-&gt;f(k)</p>',8),a=[s];function c(i,l){return e(),r("div",null,a)}const _=t(n,[["render",c],["__file","recursion.html.vue"]]);export{_ as default};
