const e=JSON.parse('{"key":"v-462a1215","path":"/java/concurrent/locks.html","title":"锁","lang":"zh-CN","frontmatter":{"icon":"lock","tag":["锁","synchronized"],"description":"1. 内置锁 synchronized Java提供了内置锁机制来支持原子性、可见性和有序性。 每个Java对象都可以用作一个实现同步的锁，这些锁被称为内置锁（Intrinsic Lock）或监视器锁（Monitor Lock）。线程在进入同步代码块之前会自动获得锁，并且在退出同步代码块时（正常退出或异常退出）自动释放锁。 Java的内置锁相当于一种互...","head":[["meta",{"property":"og:url","content":"https://spectred.github.io/java/concurrent/locks.html"}],["meta",{"property":"og:title","content":"锁"}],["meta",{"property":"og:description","content":"1. 内置锁 synchronized Java提供了内置锁机制来支持原子性、可见性和有序性。 每个Java对象都可以用作一个实现同步的锁，这些锁被称为内置锁（Intrinsic Lock）或监视器锁（Monitor Lock）。线程在进入同步代码块之前会自动获得锁，并且在退出同步代码块时（正常退出或异常退出）自动释放锁。 Java的内置锁相当于一种互..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-07T14:18:35.000Z"}],["meta",{"property":"article:tag","content":"锁"}],["meta",{"property":"article:tag","content":"synchronized"}],["meta",{"property":"article:modified_time","content":"2023-03-07T14:18:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"锁\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-07T14:18:35.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1. 内置锁 synchronized","slug":"_1-内置锁-synchronized","link":"#_1-内置锁-synchronized","children":[{"level":3,"title":"1.1 synchronized的使用","slug":"_1-1-synchronized的使用","link":"#_1-1-synchronized的使用","children":[]},{"level":3,"title":"1.2 对象的内存布局","slug":"_1-2-对象的内存布局","link":"#_1-2-对象的内存布局","children":[]},{"level":3,"title":"1.3 锁升级","slug":"_1-3-锁升级","link":"#_1-3-锁升级","children":[]},{"level":3,"title":"1.4 原理","slug":"_1-4-原理","link":"#_1-4-原理","children":[]}]},{"level":2,"title":"2. 显式锁 Lock","slug":"_2-显式锁-lock","link":"#_2-显式锁-lock","children":[{"level":3,"title":"2.1 Lock","slug":"_2-1-lock","link":"#_2-1-lock","children":[]},{"level":3,"title":"2.2 重入锁 ReentrantLock","slug":"_2-2-重入锁-reentrantlock","link":"#_2-2-重入锁-reentrantlock","children":[]},{"level":3,"title":"2.3 读-写锁 ReentrantReadWriteLock","slug":"_2-3-读-写锁-reentrantreadwritelock","link":"#_2-3-读-写锁-reentrantreadwritelock","children":[]},{"level":3,"title":"2.4 StampedLock","slug":"_2-4-stampedlock","link":"#_2-4-stampedlock","children":[]},{"level":3,"title":"2.5 Condition","slug":"_2-5-condition","link":"#_2-5-condition","children":[]}]},{"level":2,"title":"3. 锁相关的源码分析","slug":"_3-锁相关的源码分析","link":"#_3-锁相关的源码分析","children":[]},{"level":2,"title":"4. 死锁","slug":"_4-死锁","link":"#_4-死锁","children":[]},{"level":2,"title":"5. 无锁","slug":"_5-无锁","link":"#_5-无锁","children":[]}],"git":{"createdTime":1675612326000,"updatedTime":1678198715000,"contributors":[{"name":"spectred","email":"1505073336@qq.com","commits":18}]},"readingTime":{"minutes":14.59,"words":4378},"filePathRelative":"java/concurrent/locks.md","localizedDate":"2023年2月5日","autoDesc":true}');export{e as data};
